# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'language.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets, QtGui
from PyQt5.QtCore import Qt, pyqtSignal, QPoint
from PyQt5.QtWidgets import QWidget


class Ui_LanguageWindow(QWidget):
    confirmLanguage = pyqtSignal()
    def __init__(self):
        super().__init__()
        self.setWindowFlags(Qt.FramelessWindowHint)
        self.setAttribute(Qt.WA_TranslucentBackground, True)
        self.setObjectName("self")
        self.setWindowTitle("Language")
        self.setWindowIcon(QtGui.QIcon('./patcher.ico'))
        self.resize(294, 229)
        self.setMinimumSize(QtCore.QSize(294, 229))
        self.setMaximumSize(QtCore.QSize(294, 229))
        self.setSizeIncrement(QtCore.QSize(0, 0))
        self.en_usBt = QtWidgets.QRadioButton(self)
        self.en_usBt.setGeometry(QtCore.QRect(70, 144, 16, 16))
        self.en_usBt.setText("")
        self.en_usBt.setObjectName("en_usBt")
        self.en_usLabel = QtWidgets.QLabel(self)
        self.en_usLabel.setGeometry(QtCore.QRect(65, 164, 24, 7))
        self.en_usLabel.setText("")
        self.en_usLabel.setPixmap(QtGui.QPixmap("./img/en_usLabel.png"))
        self.en_usLabel.setObjectName("en_usLabel")
        self.pt_brBt = QtWidgets.QRadioButton(self)
        self.pt_brBt.setGeometry(QtCore.QRect(125, 144, 16, 16))
        self.pt_brBt.setText("")
        self.pt_brBt.setObjectName("pt_brBt")
        self.pt_brLabel = QtWidgets.QLabel(self)
        self.pt_brLabel.setGeometry(QtCore.QRect(119, 164, 24, 7))
        self.pt_brLabel.setText("")
        self.pt_brLabel.setPixmap(QtGui.QPixmap("./img/pt_brLabel.png"))
        self.pt_brLabel.setObjectName("pt_brLabel")
        self.thBt = QtWidgets.QRadioButton(self)
        self.thBt.setGeometry(QtCore.QRect(185, 144, 16, 16))
        self.thBt.setText("")
        self.thBt.setObjectName("thBt")
        self.thLabel = QtWidgets.QLabel(self)
        self.thLabel.setGeometry(QtCore.QRect(185, 164, 12, 7))
        self.thLabel.setText("")
        self.thLabel.setPixmap(QtGui.QPixmap("./img/thLabel.png"))
        self.thLabel.setObjectName("thLabel")
        self.zh_cnBt = QtWidgets.QRadioButton(self)
        self.zh_cnBt.setGeometry(QtCore.QRect(240, 144, 16, 16))
        self.zh_cnBt.setText("")
        self.zh_cnBt.setObjectName("zh_cnBt")
        self.zh_cnLabel = QtWidgets.QLabel(self)
        self.zh_cnLabel.setGeometry(QtCore.QRect(234, 164, 24, 7))
        self.zh_cnLabel.setText("")
        self.zh_cnLabel.setPixmap(QtGui.QPixmap("./img/zh_cnLabel.png"))
        self.zh_cnLabel.setObjectName("zh_cnLabel")
        self.confirmBt = QtWidgets.QPushButton(self)
        self.confirmBt.setGeometry(QtCore.QRect(135, 183, 52, 25))
        self.confirmBt.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.confirmBt.setStyleSheet("QPushButton{\n"
"border: 0px;\n"
"background-image: url(\'./img/confirm.png\');\n"
"}\n"
"QPushButton:hover {\n"
"background-image: url(\'./img/confirmHover.png\');\n"
"}\n"
"}")
        self.confirmBt.setObjectName("confirmBt")
        self.usImg = QtWidgets.QLabel(self)
        self.usImg.setGeometry(QtCore.QRect(67, 127, 18, 13))
        self.usImg.setText("")
        self.usImg.setPixmap(QtGui.QPixmap("./img/us.png"))
        self.usImg.setScaledContents(False)
        self.usImg.setObjectName("usImg")
        self.brImg = QtWidgets.QLabel(self)
        self.brImg.setGeometry(QtCore.QRect(122, 127, 18, 13))
        self.brImg.setText("")
        self.brImg.setPixmap(QtGui.QPixmap("./img/br.png"))
        self.brImg.setScaledContents(False)
        self.brImg.setObjectName("brImg")
        self.thImg = QtWidgets.QLabel(self)
        self.thImg.setGeometry(QtCore.QRect(182, 127, 18, 13))
        self.thImg.setText("")
        self.thImg.setPixmap(QtGui.QPixmap("./img/th.png"))
        self.thImg.setScaledContents(False)
        self.thImg.setObjectName("thImg")
        self.cnImg = QtWidgets.QLabel(self)
        self.cnImg.setGeometry(QtCore.QRect(237, 127, 18, 13))
        self.cnImg.setText("")
        self.cnImg.setPixmap(QtGui.QPixmap("./img/cn.png"))
        self.cnImg.setScaledContents(True)
        self.cnImg.setObjectName("cnImg")
        self.bgImg = QtWidgets.QLabel(self)
        self.bgImg.setGeometry(QtCore.QRect(-3, 0, 301, 231))
        self.bgImg.setText("")
        self.bgImg.setPixmap(QtGui.QPixmap("./img/languageBg.png"))
        self.bgImg.setScaledContents(False)
        self.bgImg.setObjectName("bgImg")
        self.bgImg.raise_()
        self.en_usBt.raise_()
        self.en_usLabel.raise_()
        self.pt_brBt.raise_()
        self.pt_brLabel.raise_()
        self.thBt.raise_()
        self.thLabel.raise_()
        self.zh_cnBt.raise_()
        self.zh_cnLabel.raise_()
        self.confirmBt.raise_()
        self.usImg.raise_()
        self.brImg.raise_()
        self.thImg.raise_()
        self.cnImg.raise_()
        self.confirmBt.clicked.connect(self.applyLanguage)
        with open('config.txt', 'r') as f:
            self.curLanguage = f.readlines()
        self.prev = int(self.curLanguage[0])  # carrega do config, 1 por padr√£o
        if self.prev == 1:
            self.en_usBt.setChecked(True)
        elif self.prev == 2:
            self.pt_brBt.setChecked(True)
        elif self.prev == 3:
            self.thBt.setChecked(True)
        elif self.prev == 4:
            self.zh_cnBt.setChecked(True)

    def mousePressEvent(self, event):
        # if button==false ai toda vez q eu clicar num button seto true e quando liberar seto false
        self.lastPos = event.globalPos()

    def mouseMoveEvent(self, event):
        delta = QPoint(event.globalPos() - self.lastPos)
        self.move(self.x() + delta.x(), self.y() + delta.y())
        self.lastPos = event.globalPos()

    def applyLanguage(self):
        if self.en_usBt.isChecked() and self.prev != 1:
            self.gameLanguage = "libconfig_enus.xml"
            print(self.gameLanguage)
            self.prev = 1  # salva no config junto com o set pro radio
            self.translateFlag = True
        elif self.pt_brBt.isChecked() and self.prev != 2:
            self.gameLanguage = "libconfig_ptbr.xml"
            print(self.gameLanguage)
            self.prev = 2
            self.translateFlag = True
        elif self.thBt.isChecked() and self.prev != 3:
            self.gameLanguage = "libconfig_thai.xml"
            print(self.gameLanguage)
            self.prev = 3
            self.translateFlag = True
        elif self.zh_cnBt.isChecked() and self.prev != 4:
            self.gameLanguage = "libconfig_chn.xml"
            print(self.gameLanguage)
            self.prev = 4
            self.translateFlag = True
        elif self.prev == 1 or 2 or 3 or 4:
            self.translateFlag = False
        with open('config.txt', "w+") as file:
            file.write(f'{self.prev}')
        self.close()

    def displayMe(self):
        self.show()

    def closeEvent(self, event):
        if self.translateFlag == True:
            self.confirmLanguage.emit()